# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
- name: JFROG_CLI_LOG_LEVEL
  value: DEBUG 

trigger:
- azure-pipelines

pool:
  vmImage: ubuntu-latest

jobs:
- job: dotnet_lib
  steps:  
  - task: JFrogToolsInstaller@1
    inputs:
      artifactoryConnection: 'new-stg-soleng'
      cliInstallationRepo: 'jfrog-cli-releases'
      installCustomVersion: true
      cliVersion: '2.14.0'
  - task: CmdLine@2
    inputs:
      script: |
        pwd
        ls -l 
        mv new-dotnet-core-webapi.sln new-dotnet-core-webapi.sln.tmp
        ls -l
        echo $(System.DefaultWorkingDirectory)
    displayName: workaround for JFrog Audit
  - task: JFrogAudit@1
    inputs:
      xrayConnection: 'new-stg-soleng-xray'
      watchesSource: 'none'
      allowFailBuild: false
      workingDirectory: 'MyLib/greeting/'
  - task: JFrogDotnetCore@1
    inputs:
      command: 'restore'
      artifactoryConnection: 'new-stg-soleng'
      targetResolveRepo: 'urs-dotnet'
      rootPath: 'MyLib/*.sln'
      collectBuildInfo: true
      buildName: '$(Build.DefinitionName)'
      buildNumber: '$(Build.BuildNumber)'
  - task: DotNetCoreCLI@2
    inputs:
      command: 'build'
      projects: 'MyLib'
      arguments: '-c Release'
  - task: JFrogDotnetCore@1
    inputs:
      command: 'push'
      artifactoryConnection: 'new-stg-soleng'
      targetDeployRepo: 'urs-dotnet'
      targetDeployPath: 'azure'
      pathToNupkg: 'MyLib/greeting/**/*.nupkg'
      collectBuildInfo: true
      buildName: '$(Build.DefinitionName)'
      buildNumber: '$(Build.BuildNumber)'
      includeEnvVars: true
  - task: JFrogPublishBuildInfo@1
    inputs:
      artifactoryConnection: 'new-stg-soleng'
      buildName: '$(Build.DefinitionName)'
      buildNumber: '$(Build.BuildNumber)'