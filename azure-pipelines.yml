# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- azure-pipelines

pool:
  vmImage: ubuntu-latest

jobs:
- job: dotnet_lib
  steps:
  - script: echo Hello, world!
    displayName: 'Run a one-line script'

  - script: |
      echo Add other tasks to build, test, and deploy your project.
      echo See https://aka.ms/yaml
    displayName: 'Run a multi-line script'
  
  - task: JFrogAudit@1
    inputs:
      xrayConnection: 'new-stg-soleng-xray'
      watchesSource: 'none'
      allowFailBuild: false
  - task: JFrogDotnetCore@1
    inputs:
      command: 'restore'
      artifactoryConnection: 'new-stg-soleng'
      targetResolveRepo: 'urs-dotnet'
      rootPath: 'MyLib/*.sln'
      collectBuildInfo: true
      buildName: '$(Build.DefinitionName)'
      buildNumber: '$(Build.BuildNumber)'
      includeEnvVars: true
  - task: DotNetCoreCLI@2
    inputs:
      command: 'build'
      projects: 'MyLib'
      arguments: '-c Release'
  - task: JFrogDotnetCore@1
    inputs:
      command: 'push'
      artifactoryConnection: 'new-stg-soleng'
      targetDeployRepo: 'urs-dotnet'
      targetDeployPath: 'azure'
      pathToNupkg: 'MyLib/greeting/**/*.nupkg'
      collectBuildInfo: true
      buildName: '$(Build.DefinitionName)'
      buildNumber: '$(Build.BuildNumber)'
      includeEnvVars: true
  - task: ArtifactoryPublishBuildInfo@1
    inputs:
      artifactoryService: 'new-soleng-stg'
      buildName: '$(Build.DefinitionName)'
      buildNumber: '$(Build.BuildNumber)'