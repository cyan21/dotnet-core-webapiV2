template: true
valuesFilePath: values.yml  

resources:
################
# INIT 
################
  - name: {{ .Values.dotnetInitResources.gitRepo.name }}
    type: GitRepo
    configuration:
      gitProvider: {{ .Values.dotnetInitResources.gitRepo.gitProvider }}
      path: {{ .Values.dotnetInitResources.gitRepo.path }}
      branches:
        include:  {{ .Values.dotnetInitResources.gitRepo.branches.include }}
      files:
        include: {{ .Values.dotnetInitResources.gitRepo.files.include }}
      buildOn:
         commit: true
         pullRequestCreate: true
         pullRequestClose: true
         
  - name:  {{ .Values.dotnetInitResources.buildInfo.resourceName }}
    type: BuildInfo 
    configuration:
      sourceArtifactory: {{ .Values.dotnetProject.artifactoryIntegration }}
      buildName: {{ .Values.dotnetInitResources.buildInfo.name }}
      buildNumber: ${run_number} 

  - name: {{ .Values.dotnetInitResources.buildInfoPromoted.resourceName }}
    type: BuildInfo 
    configuration:
      sourceArtifactory: {{ .Values.dotnetProject.artifactoryIntegration }}
      buildName: {{ .Values.dotnetInitResources.buildInfo.name }}
      buildNumber: ${run_number} 

  - name: {{ .Values.dotnetInitResources.propertyBag.name }}
    type: PropertyBag
    configuration:
      baseImageName: "{{ .Values.dotnetProject.container.registry }}/{{ .Values.dotnetProject.container.name }}"
      baseImageTag: YYY
################
# LIB 
################
  - name: {{ .Values.dotnetLibResources.gitRepo.name }}
    type: GitRepo
    configuration:
      gitProvider: {{ .Values.dotnetLibResources.gitRepo.gitProvider }}
      path: {{ .Values.dotnetLibResources.gitRepo.path }}
      branches:
        include: {{ .Values.dotnetLibResources.gitRepo.branches.include }}
      buildOn:
         commit: false

  - name: {{ .Values.dotnetLibResources.buildInfo.resourceName }}
    type: BuildInfo 
    configuration:
      sourceArtifactory: {{ .Values.dotnetProject.artifactoryIntegration }}
      buildName: {{ .Values.dotnetLibResources.buildInfo.name }} 
      buildNumber: ${run_number} 

  - name: {{ .Values.dotnetLibResources.buildInfoPromoted.resourceName }}
    type: BuildInfo 
    configuration:
      sourceArtifactory: {{ .Values.dotnetProject.artifactoryIntegration }}
      buildName: {{ .Values.dotnetLibResources.buildInfo.resourceName }}
      buildNumber: ${run_number} 

  - name: {{ .Values.dotnetLibResources.propertyBag.name }}
    type: PropertyBag
    configuration:
      biNumber: XXX

################
# APP 
################

  - name: {{ .Values.dotnetAppResources.gitRepo.name }}
    type: GitRepo
    configuration:
      gitProvider: {{ .Values.dotnetAppResources.gitRepo.gitProvider }}
      path: {{ .Values.dotnetAppResources.gitRepo.path }}
      branches:
        include: {{ .Values.dotnetAppResources.gitRepo.branches.include }}
      buildOn:
         commit: false

  - name: {{ .Values.dotnetAppResources.buildInfo.resourceName }}
    type: BuildInfo 
    configuration:
      sourceArtifactory: {{ .Values.dotnetProject.artifactoryIntegration }}
      buildName: {{ .Values.dotnetAppResources.buildInfo.name }} 
      buildNumber: ${run_number} 

  - name: {{ .Values.dotnetAppResources.buildInfoPromoted.resourceName }}
    type: BuildInfo 
    configuration:
      sourceArtifactory: {{ .Values.dotnetProject.artifactoryIntegration }}
      buildName: {{ .Values.dotnetAppResources.buildInfo.resourceName }}
      buildNumber: ${run_number} 

  - name: {{ .Values.dotnetAppResources.propertyBag.name }}
    type: PropertyBag
    configuration:
      biNumber: XXX

pipelines:
################
# INIT 
################
  - name: {{ .Values.dotnetProject.pipelineNameInit }}
    steps:
      - name: {{ .Values.dotnetInitSteps.dockerBuild.name }}
        type: DockerBuild
        configuration:
          affinityGroup: dotnet
          dockerFileName: {{ .Values.dotnetInitSteps.dockerBuild.dockerFileName }}
          dockerFileLocation: {{ .Values.dotnetInitSteps.dockerBuild.dockerFileLocation }}
          dockerImageName: "{{ .Values.dotnetProject.container.registry }}/{{ .Values.dotnetProject.container.image }}"
          dockerImageTag: {{ .Values.dotnetProject.container.tag }}
          inputResources:
            - name: {{ .Values.dotnetInitResources.gitRepo.name }}
          integrations:
            - name: {{ .Values.dotnetProject.artifactoryIntegration }}
            - name: {{ .Values.dotnetProject.dockerIntegration }}
        execution:
          onStart:
            - cd ${res_{{ .Values.dotnetInitResources.gitRepo.name }}_resourcePath}/CI/jfrog
            - git checkout {{ .Values.dotnetInitResources.gitRepo.branches.include }}
            - ls -l && chmod +x init.sh
            - ./init.sh -u  ${int_{{ .Values.dotnetProject.artifactoryIntegration }}_url%/artifactory} -p ${int_{{ .Values.dotnetProject.artifactoryIntegration }}_apikey} -l ${int_{{ .Values.dotnetProject.artifactoryIntegration }}_user}

      - name: {{ .Values.dotnetInitSteps.dockerPush.name }}
        type: DockerPush
        configuration:
          affinityGroup: dotnet
          targetRepository: {{ .Values.dotnetProject.container.repoSource }}
          autoPublishBuildInfo: {{ .Values.dotnetInitSteps.dockerPush.autoPublishBuildInfo }}
          forceXrayScan: {{ .Values.dotnetInitSteps.dockerPush.forceXrayScan }}
          inputSteps:
            - name: {{ .Values.dotnetInitSteps.dockerBuild.name }}
          integrations:
            - name: {{ .Values.dotnetProject.artifactoryIntegration }}
          outputResources:
            - name: {{ .Values.dotnetInitResources.buildInfo.resourceName }}

      - name: {{ .Values.dotnetInitSteps.promotion.name }}
        type: PromoteBuild
        configuration:
          targetRepository: {{ .Values.dotnetProject.container.repoPromotion1 }}
          includeDependencies: {{ .Values.dotnetInitSteps.promotion.includeDependencies }}
          status: {{ .Values.dotnetInitSteps.promotion.status }}
          comment: {{ .Values.dotnetInitSteps.promotion.comment }}
          copy: {{ .Values.dotnetInitSteps.promotion.copy }}
          inputResources:
            - name: {{ .Values.dotnetInitResources.buildInfo.resourceName }}
          inputSteps:
            - name: {{ .Values.dotnetInitSteps.dockerPush.name }}
          integrations:
            - name: {{ .Values.dotnetProject.artifactoryIntegration }}
          outputResources:
            - name: {{ .Values.dotnetInitResources.buildInfoPromoted.resourceName }}
            - name: {{ .Values.dotnetInitResources.propertyBag.name }}
        execution:
          onSuccess:
            - write_output {{ .Values.dotnetInitResources.propertyBag.name }} baseImgTag={{ .Values.dotnetProject.container.tag }}
################
# LIB 
################
  - name: {{ .Values.dotnetProject.pipelineNameDotnetLib }}
    steps:
      - name: {{ .Values.dotnetLibSteps.buildNugetLib.name }}
        type: Bash
        configuration:
          environmentVariables:
            JFROG_CLI_LOG_LEVEL: DEBUG
          affinityGroup: nuget
          runtime:
            type: image
            image:
              custom:
                registry: {{ .Values.dotnetProject.artifactoryIntegration }}
                name: "{{ .Values.dotnetProject.container.registry }}/{{ .Values.dotnetProject.container.image }}"
                # tag: {{ .Values.dotnetProject.container.tag }}
                tag: "${res_{{ .Values.dotnetInitResources.propertyBag.name }}_baseImgTag}"
                sourceRepository: {{ .Values.dotnetProject.container.repoSource }}
          # inputSteps:
          #   - name: setup_env
          inputResources:
            - name: {{ .Values.dotnetLibResources.gitRepo.name }}
            - name: {{ .Values.dotnetInitResources.propertyBag.name }}
          outputResources:
            - name: {{ .Values.dotnetLibResources.buildInfo.resourceName }}
          integrations:
            - name: {{ .Values.dotnetProject.artifactoryIntegration }}
        execution:
          onExecute:
            # below is a string substition : replacing the /artifactory in the integration url by /ui
            - export JFROG_CLI_BUILD_URL="${int_{{ .Values.dotnetProject.artifactoryIntegration }}_url/%artifactory/ui}/pipelines/myPipelines/lib_nuget/${run_number}/setup_env?branch=${res_src_code_lib_nuget_branchName}"
            - cd ${res_{{ .Values.dotnetLibResources.gitRepo.name }}_resourcePath} && ls -l
            - git branch
            - git checkout ${res_{{ .Values.dotnetLibResources.gitRepo.name }}_branchName}
            - cat MyLib/greeting/greeting.csproj
            - appVersion=`sed -n "s/[[:space:]]*<Version>\(.*\)<\/Version>/\1/p" MyLib/greeting/greeting.csproj`
            - jfrog rt dotnetc --server-id-resolve {{ .Values.dotnetProject.artifactoryIntegration }} --repo-resolve {{ .Values.dotnetProject.nuget.repoSource }}
            - ls -l .jfrog/projects && cat .jfrog/projects/dotnet.yaml
            - jfrog rt dotnet build MyLib/greeting -c Release --build-name={{ .Values.dotnetLibResources.buildInfo.name }} --build-number=${run_number} --module=dependencies
            - jfrog rt u MyLib/greeting/bin/Release/Greeting.${appVersion}.nupkg {{ .Values.dotnetProject.nuget.repoSource }} --build-name={{ .Values.dotnetLibResources.buildInfo.name }} --build-number=${run_number} --module=result
            - jfrog rt bce {{ .Values.dotnetLibResources.buildInfo.name }} ${run_number}
            - jfrog rt bp {{ .Values.dotnetLibResources.buildInfo.name }} ${run_number}
          onSuccess:
            - echo ${res_{{ .Values.dotnetInitResources.propertyBag.name }}_baseImgTag}
            - add_run_variables runVarDockerBaseImgTag=${res_{{ .Values.dotnetInitResources.propertyBag.name }}_baseImgTag}
            - add_run_variables runVarlibVersion=${appVersion}

      - name: {{ .Values.dotnetLibSteps.xray.name }}
        type: XrayScan
        configuration:
          failOnScan: false
          inputResources:
            - name: {{ .Values.dotnetLibResources.buildInfo.resourceName }}
              trigger: true

      - name: {{ .Values.dotnetLibSteps.promotion.name }}
        type: PromoteBuild
        configuration:
          targetRepository: {{ .Values.dotnetProject.nuget.repoPromotion1 }}
          includeDependencies: {{ .Values.dotnetLibSteps.promotion.includeDependencies }}
          status: {{ .Values.dotnetLibSteps.promotion.status }}
          comment: {{ .Values.dotnetLibSteps.promotion.comment }}
          copy: {{ .Values.dotnetLibSteps.promotion.copy }}
          inputSteps:
            - name: {{ .Values.dotnetLibSteps.xray.name }}
          inputResources:
            - name: {{ .Values.dotnetLibResources.buildInfo.resourceName }}
          outputResources:
            - name: {{ .Values.dotnetLibResources.propertyBag.name }}
            - name: {{ .Values.dotnetLibResources.buildInfoPromoted.resourceName }}
        execution:
          onSuccess:
            - write_output {{ .Values.dotnetLibResources.propertyBag.name }} libVersion=${runVarlibVersion}
            - write_output {{ .Values.dotnetLibResources.propertyBag.name }} dockerBaseImgTag=${runVarDockerBaseImgTag}

################
# APP 
################
  - name: {{ .Values.dotnetProject.pipelineNameDotnetApp }}
    steps:
      - name: {{ .Values.dotnetAppSteps.buildApp.name }}
        type: Bash
        configuration:
          affinityGroup: dotnet
          runtime:
            type: image
            image:
              custom:
                registry: {{ .Values.dotnetProject.artifactoryIntegration }}
                name: "{{ .Values.dotnetProject.container.registry }}/{{ .Values.dotnetProject.container.image }}"
                # tag: {{ .Values.dotnetProject.container.tag }}
                tag: "${res_{{ .Values.dotnetLibResources.propertyBag.name }}_dockerBaseImgTag}"
                sourceRepository: {{ .Values.dotnetProject.container.repoSource }}
          inputResources:
            - name: {{ .Values.dotnetAppResources.gitRepo.name }}
            - name: {{ .Values.dotnetLibResources.propertyBag.name }}
          outputResources:
            - name: {{ .Values.dotnetAppResources.buildInfo.resourceName }}
          integrations:
            - name: {{ .Values.dotnetProject.artifactoryIntegration }}
        execution:
          onStart:
            - newLibVersion=${res_{{ .Values.dotnetLibResources.propertyBag.name }}_libVersion}
            - echo "NewLibVersion = $newLibVersion"
            - echo "NewDockerTag = ${res_{{ .Values.dotnetLibResources.propertyBag.name }}_dockerBaseImgTag}"
          onExecute:
            # below is a string substition : replacing the /artifactory in the integration url by /uiÒ
            - export JFROG_CLI_BUILD_URL="${int_{{ .Values.dotnetProject.artifactoryIntegration }}_url/%artifactory/ui}/pipelines/myPipelines/app_dotnet/${run_number}/setup_env?branch=${res_{{ .Values.dotnetAppResources.gitRepo.name }}_branchName}"
            - cd ${res_{{ .Values.dotnetAppResources.gitRepo.name }}_resourcePath} && ls -l
            - echo {{ .Values.dotnetAppResources.gitRepo.branches.include }}
            - git checkout {{ .Values.dotnetAppResources.gitRepo.branches.include }}
            - dotnet nuget locals all --list 
            - dotnet nuget locals all --clear
            - cat MyWebAPI/MyWebAPI.csproj
            # bump lib version
            - sed "s/Greeting\" Version=\"[0-9.]*\"/Greeting\" Version=\"${newLibVersion}\"/" MyWebAPI/MyWebAPI.csproj
            - sed -i "s/Greeting\" Version=\"[0-9.]*\"/Greeting\" Version=\"${newLibVersion}\"/" MyWebAPI/MyWebAPI.csproj
            - cat MyWebAPI/MyWebAPI.csproj
            - appVersion=`sed -n "s/[[:space:]]*<Version>\(.*\)<\/Version>/\1/p" MyWebAPI/MyWebAPI.csproj`
            - echo $appVersion
            - jfrog rt dotnetc --server-id-resolve {{ .Values.dotnetProject.artifactoryIntegration }} --repo-resolve {{ .Values.dotnetProject.nuget.repoSource }}
            - ls -l .jfrog/projects && cat .jfrog/projects/dotnet.yaml
            - jfrog rt dotnet build MyWebAPI -c Release --build-name={{ .Values.dotnetAppResources.buildInfo.name }} --build-number=${run_number} --module=dependencies
            - jfrog rt dotnet publish -c Release MyWebAPI/
            - tar czvf webapi-${appVersion}.tar.gz -C MyWebAPI/bin/Release/netcoreapp3.1/publish $(ls MyWebAPI/bin/Release/netcoreapp3.1/publish)
            - jfrog rt u webapi-${appVersion}.tar.gz  {{ .Values.dotnetProject.generic.repoSource }} --build-name={{ .Values.dotnetAppResources.buildInfo.name }} --build-number=${run_number} --module=result
            - jfrog rt bce {{ .Values.dotnetAppResources.buildInfo.name }} ${run_number}
            - jfrog rt bp {{ .Values.dotnetAppResources.buildInfo.name }} ${run_number}

      - name: {{ .Values.dotnetAppSteps.xray.name }}
        type: XrayScan
        configuration:
          failOnScan: false
          inputResources:
            - name: {{ .Values.dotnetAppResources.buildInfo.resourceName }}
              trigger: true

      - name: {{ .Values.dotnetAppSteps.promotion.name }}
        type: PromoteBuild
        configuration:
          targetRepository: {{ .Values.dotnetProject.generic.repoPromotion1 }}
          includeDependencies: {{ .Values.dotnetAppSteps.promotion.includeDependencies }}
          status: {{ .Values.dotnetAppSteps.promotion.status }}
          comment: {{ .Values.dotnetAppSteps.promotion.comment }}
          copy: {{ .Values.dotnetAppSteps.promotion.copy }}
          inputSteps:
            - name: {{ .Values.dotnetAppSteps.xray.name }}
          inputResources:
            - name: {{ .Values.dotnetAppResources.buildInfo.resourceName }}
          outputResources:
            - name: {{ .Values.dotnetAppResources.propertyBag.name }}
            - name: {{ .Values.dotnetAppResources.buildInfoPromoted.resourceName }}
